---
- name: "[NGINX] -  Required and recommended packages are installed."
  package: "name={{ item }} state=present"
  with_flattened:
    - "{{ nextcloud_web.nginx.pkg_inst }}"
    - "{{ nextcloud_web.pkg_dep }}"
    - "{{ nextcloud_db[nextcloud_db_backend].php}}"
  notify: [ "start nginx", "start php-fpm" ]

- block:
  - name: "[NGINX] -  Configure backports."
    apt_repository:
      repo: "deb {{nextcloud_backports.repo}} {{nextcloud_backports.name}} {{nextcloud_backports.env}}"
      state: present
      update_cache: yes
  - name: "[NGINX] -  Install from backports."
    apt: "name={{ item }} state=latest default_release={{nextcloud_backports.name}}"
    with_flattened:
      - "{{nextcloud_backports.pkg}}"
  when: ansible_os_family == "Debian" and nextcloud_backports is defined

- name: "[NGINX] -  remove some commented line in php-fpm conf"
  lineinfile:
    dest: "{{ nextcloud_php_dir }}/fpm/pool.d/www.conf"
    regexp: '^\;env'
    state: absent
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: reload php-fpm

- name: "[NGINX] -  Add path variable to php-fpm"
  blockinfile:
    dest: "{{ nextcloud_php_dir }}/fpm/pool.d/www.conf"
    insertafter: '^; Default Value: clean env$'
    marker: "; {mark} ANSIBLE MANAGED BLOCK"
    block: |
      env[HOSTNAME] = $HOSTNAME
      env[PATH] = $PATH
      env[TMP] = /tmp
      env[TMPDIR] = /tmp
      env[TEMP] = /tmp
  notify: reload php-fpm

- name: "[NGINX] -  enable APC for php"
  lineinfile:
    dest: "{{ nextcloud_php_dir }}/fpm/php.ini"
    line: "apc.enable_cli = 1"
    insertbefore: "^; End:$"
    state: present
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: reload php-fpm

- name: "[NGINX] -  Public Diffie-Hellman Parameter are generated. This might take a while."
  command: "openssl dhparam -out {{ nextcloud_tls_dhparam }} 2048"
  args:
    creates: "{{ nextcloud_tls_dhparam }}"

- name: "[NGINX] -  php handler configuration is present."
  template:
    dest: /etc/nginx/sites-available/php_handler.cnf
    src: templates/nginx_php_handler.j2
  notify: reload nginx

- name: "[NGINX] -  php handler is enabled"
  file:
    path: /etc/nginx/sites-enabled/php_handler
    src: /etc/nginx/sites-available/php_handler.cnf
    state: link
  notify: reload nginx

- name: "[NGINX] -  generate Nextcloud configuration for nginx"
  template:
    dest: /etc/nginx/sites-available/nc_{{ nextcloud_instance_name }}.cnf
    src: "{{nextcloud_websrv_template}}"
  notify: reload nginx

- name: "[NGINX] -  Enable Nextcloud in nginx conf"
  file:
    path: /etc/nginx/sites-enabled/nc_{{ nextcloud_instance_name }}
    src: /etc/nginx/sites-available/nc_{{ nextcloud_instance_name }}.cnf
    state: link
    # validate: "/usr/sbin/nginx -t #%s"
  notify: reload nginx
